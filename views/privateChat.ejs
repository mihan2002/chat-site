<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Professional Chat Interface</title>
    <link rel="stylesheet" href="privet.css" />
  </head>
  <body>
    <div class="container">
      <div class="sidebar">
        <div class="chats">Chats</div>
        <% users.forEach(element => { %>
        <div class="chat" onclick="changeChatName('<%= element.username %>')">
          <%= element.username %>
        </div>
        <% }) %>
      </div>
      <div class="main">
        <div class="header" id="chat-header">Chat Name</div>
        <div class="chat-box">
          <ul class="chat-box-ul">
            <li><div class="message other">Text from the other end</div></li>
            <li><div class="message me">Text from me</div></li>
          </ul>
        </div>
        <div class="input-box">
          <input type="text" placeholder="Type a message" id="input" />
          <button>Send</button>
        </div>
      </div>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      async function restoreChatHistory(username,chatName) {
        // const response = await fetch("/register", {
        //     method: "POST",
        //     headers: {
        //       "Content-Type": "application/json",
        //     },
        //     body: JSON.stringify({
        //       username: username,
        //       password: password,
        //       email: email,
        //     }),
        //   });


        // if (chatHistory) {
        //   chatHistory.forEach((element) => {
        //     var ul = document.getElementById("chat-box-ul");
        //     var li = document.createElement("li");
        //     var div = document.createElement("div");
        //     div.textContent = chatHistory.message;
        //     if (chatHistory.username == username) {
        //       div.classList.add("message me");
        //     } else {
        //       div.classList.add("message other");
        //     }
        //     li.appendChild(div);
        //     ul.appendChild(li);
        //     // window.scrollTo(0, document.body.scrollHeight);
        //   });
        // }
      }

      function changeChatName(user) {
        document.getElementById("chat-header").innerText = user.username;
      }

      let room = "";
      let username = "";

      function setDetails(owner,user){
        room=owner._id

      }
      const socket = io();

      document.addEventListener("DOMContentLoaded", function () {
        console.log("Username:", username); // Debugging log

        socket.emit("login", username);

        var ul = document.getElementById("chat-box-ul");
        var li = document.createElement("li");
        var div = document.createElement("div");
        var form = document.getElementById("form");
        var input = document.getElementById("input");

        form.addEventListener("submit", function (e) {
          e.preventDefault();
          if (input.value) {
            socket.emit("private-message", {
              room: room,
              username: "<%= username %>",
              message: input.value,
            });
            input.value = "";
          }
        });

        socket.on("private-message", function (data) {
          const item = document.createElement("li");
          const messageDiv = document.createElement("div");
          messageDiv.textContent = `${data.message}`;
          messageDiv.classList.add(
            data.sender === "<%= username %>" ? "me" : "other"
          );
          item.appendChild(messageDiv);
          messages.appendChild(item);
          window.scrollTo(0, document.body.scrollHeight);
        });
      });
    </script>
  </body>
</html>
